<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo+Github+Coding搭建个人博客</title>
    <url>/2020/02/29/hexo+github+coding%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>我用hexo+github+coding搭建个人博客站的过程并不顺利，参考了网上的一些教程，也经过了自己的摸索。<br>这篇文章记录一下我搭建个人博客站的过程，留作备忘，未来需要学习时也好能快速上手。<br>当然，如果能为看本文章的人提供一些有用的参考，更好。<br>另外，<strong>我的电脑是win10系统，以下内容均基于此系统，别的系统我没试，请谨慎参考</strong>。</p>
<h2 id="本文结构"><a href="#本文结构" class="headerlink" title="本文结构"></a>本文结构</h2><ul>
<li>博客方案原理</li>
<li>安装程序</li>
<li>博客部署</li>
<li>配置博客</li>
<li>开始写作</li>
<li>Markdown语法</li>
</ul>
<a id="more"></a>

<h2 id="博客方案原理"><a href="#博客方案原理" class="headerlink" title="博客方案原理"></a>博客方案原理</h2><p>这部分内容可以跳过，但是建议还是先对搭建博客所使用的工具有个基础了解，再去看安装步骤更好。<br>搭建原理简单地说就是：<br><strong>我们在本地用Markdown写作文章，用Hexo进行渲染并生成静态网页，然后将网页上传到Github或Coding上进行保存，并利用二者给定的静态网站地址进行访问</strong>，更一步还可以绑定自有域名，通过个性化的域名进行访问。<br>过程看起来有点复杂…事实上也确实有些复杂，但相比买域名+租用主机服务器+建站过程来说，这个方案还是可以接受的。<br>本质上，我们是用Hexo+Github及Hexo+Coding分别建立了相同的博客，只不过这个博客是分别部署在了国外的Github和国内的Coding上而已。<br>如果不想这么麻烦，完全可以只用Hexo+Github或Hexo+Coding之中的一种方式建立博客即可（推荐Coding，访问更快）</p>
<h3 id="优点与缺点"><a href="#优点与缺点" class="headerlink" title="优点与缺点"></a>优点与缺点</h3><p>相比wordpress、zblog、typecho这些需要租用主机空间的建站程序，这套Hexo+Github+Coding的方案有许多<strong>优点</strong>：</p>
<ul>
<li>如果不需要绑定自有域名，那么是零投入成本（电脑、网络这些成本不算&gt;_&lt;）</li>
<li>免费HTTPS加密（这项服务很多主机商都是要收费的）</li>
<li>双线部署，相当于有了备份</li>
<li>实现简单，对于只需要记录、写博客的人来说，可以专注于内容，而不是用大量精力去进行网站维护</li>
</ul>
<p>当然，<strong>缺点</strong>也很明显：</p>
<ul>
<li>无法实现动态网站的功能</li>
<li>很多功能需要接入第三方服务</li>
<li>站点配置需要通过改动配置文件实现，相比wordpress这些不算友好</li>
<li>文章只能在自己电脑发布，不方便随时写文章（通过一些特殊办法实现的不算）</li>
<li>文章的上传同步等需要使用命令实现</li>
<li>等等</li>
</ul>
<p>通过以上内容了解了博客原理及这套方案优缺点后，如果接受不了，以下就可以不用看了。<br>如果觉得这些缺点不是问题，或仍想尝鲜的，我们继续……</p>
<h3 id="什么是Hexo？"><a href="#什么是Hexo？" class="headerlink" title="什么是Hexo？"></a>什么是Hexo？</h3><p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">官方文档</a>定义如下：</p>
<blockquote>
<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
</blockquote>
<p>简言之，Hexo就是一个静态网页的生成器，它可以通过渲染引擎将我们的文章渲染为网页，这样浏览器就可以识别文章并进行网页展示。</p>
<h3 id="什么是Github？"><a href="#什么是Github？" class="headerlink" title="什么是Github？"></a>什么是Github？</h3><p>百度百科解释如下：</p>
<blockquote>
<p>GitHub是一个面向开源及私有软件项目的托管平台，因为只支持git作为唯一的版本库格式进行托管，故名GitHub。</p>
</blockquote>
<p>个人理解Github是一个代码托管的平台，在这个平台上可以对代码进行历史版本管理、协同开发、合并等，方便了项目的统一管理。对个人开源项目来说，除了版本管理以外，也可以通过别人的贡献，不断完善该项目，提高项目开发的速度与质量。</p>
<h3 id="什么是Coding？"><a href="#什么是Coding？" class="headerlink" title="什么是Coding？"></a>什么是Coding？</h3><p>Coding可以理解为国内版本的Github，当然coding提供了更多的功能，包括项目管理、质量控制、云开发环境等功能。<br>Coding目前属于腾讯公司，在2019年底时，腾讯将自有的腾讯云开发平台与收购的Coding平台进行了整合，就是目前的Coding。</p>
<h2 id="安装程序"><a href="#安装程序" class="headerlink" title="安装程序"></a>安装程序</h2><h3 id="安装依赖程序"><a href="#安装依赖程序" class="headerlink" title="安装依赖程序"></a>安装依赖程序</h3><p>此处主要是安装Hexo程序，但是安装Hexo前必须先安装其依赖程序<strong>Node.js</strong>及<strong>Git</strong>。如果电脑中已有此程序，那么可以直接安装Hexo（对此两个程序不再介绍，本人也了解不多，讲不清楚，需要的自己百度）。<br>Node.js与Git下载地址如下：</p>
<ul>
<li><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener"><strong>Node.js</strong></a>(Node.js版本需不低于8.10，建议直接下载安装符合自己操作系统的最新版本即可)</li>
<li><a href="https://git-scm.com/downloads" target="_blank" rel="noopener"><strong>Git</strong></a>（同样下载安装符合自己操作系统的最新版本即可)</li>
</ul>
<p>以上两个程序的下载安装过程都很简单，下载对应版本后一路默认安装即可。</p>
<h3 id="检查程序是否安装成功"><a href="#检查程序是否安装成功" class="headerlink" title="检查程序是否安装成功"></a>检查程序是否安装成功</h3><p>程序安装后，可以通过以下方式检查是否安装成功。</p>
<h4 id="Node-js："><a href="#Node-js：" class="headerlink" title="Node.js："></a><strong>Node.js</strong>：</h4><p>WIN+R打开运行，输入cmd回车，在cmd窗口输入以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure>
<p>安装成功情况下，会返回版本。我的返回值是</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">v12.15.0</span><br></pre></td></tr></table></figure>

<h4 id="Git有两种方式："><a href="#Git有两种方式：" class="headerlink" title="Git有两种方式："></a><strong>Git</strong>有两种方式：</h4><p>A.桌面右键点击可以看到多了两个命令：</p>
<ul>
<li>Git GUI Here（Git的图形操作界面）</li>
<li>Git Bash Here（Git的命令界面）</li>
</ul>
<p>B.命令方式，在cmd窗口输入以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git version</span><br></pre></td></tr></table></figure>
<p>安装成功情况下，会返回版本。我的返回值是</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git version 2.25.0.windows.1</span><br></pre></td></tr></table></figure>
<h4 id="npm："><a href="#npm：" class="headerlink" title="npm："></a><strong>npm</strong>：</h4><p>由于我们需要使用npm命令来安装Hexo,所以还需要看一下npm是否安装成功：<br>在cmd窗口输入以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure>
<p>安装成功情况下，会返回版本。我的返回值是</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">6.13.4</span><br></pre></td></tr></table></figure>
<h3 id="安装Hexo程序"><a href="#安装Hexo程序" class="headerlink" title="安装Hexo程序"></a>安装Hexo程序</h3><p>选择一个地方新建一个文件夹，名称自己随便起即可，我是直接建在了D盘根目录下，并起名为hexoblog。然后进入到此文件夹（我的是D:\hexoblog\），点击右键，选择“<strong>Git Bash Here</strong>”，输入以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>
<p>输入后要等一会，大概10到30秒，系统会返回一些信息类似下面这样的格式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">......</span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY:......</span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY:......</span><br><span class="line"></span><br><span class="line">+ hexo-cli@...</span><br><span class="line">updated 1 package in ...s</span><br></pre></td></tr></table></figure>
<p>此时，继续输入以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<p>继续等待系统返回信息，此次返回的信息会比较多，类似下面这样：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm WARN deprecated swig@.....</span><br><span class="line">(类似这样的以&quot;npm WARN&quot;开头的语句有10行左右)</span><br><span class="line">...</span><br><span class="line">+ hexo-deployer-git@...</span><br><span class="line">added ... packages in ....s</span><br></pre></td></tr></table></figure>
<h3 id="初始化本地Hexo博客"><a href="#初始化本地Hexo博客" class="headerlink" title="初始化本地Hexo博客"></a>初始化本地Hexo博客</h3><p>在刚才的文件夹下再次新建一个文件夹并起个名字，这个文件夹将成为你博客的存放文件夹（我的地址为D:\hexoblog\hexo\）。<br>进入此文件夹下，点击鼠标右键选择“<strong>Git Bash Here</strong>”，输入以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure>
<p>继续等待，期间会看到系统下载文件的进度，几十秒后，系统会返回一大串的信息，拉到最下面，看到类似以下语句则说明安装成功：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">......</span><br><span class="line">added ...(数字) packages in ...(数字)s</span><br><span class="line">INFO  Start blogging with Hexo!</span><br></pre></td></tr></table></figure>
<p>此时本地Hexo就初始化成功了。打开Hexo博客文件夹（我的地址：D:\hexoblog\hexo\），会看到以下文件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.depoly_git</span><br><span class="line">node_modules</span><br><span class="line">public</span><br><span class="line">scaffolds</span><br><span class="line">source</span><br><span class="line">themes</span><br><span class="line">.gitignore</span><br><span class="line">_config.yml</span><br><span class="line">db.json</span><br><span class="line">package.json</span><br><span class="line">package-lock.json</span><br></pre></td></tr></table></figure>
<h3 id="本地查看博客"><a href="#本地查看博客" class="headerlink" title="本地查看博客"></a>本地查看博客</h3><p>进入Hexo博客文件夹（我的地址：D:\hexoblog\hexo\），点击鼠标右键选择“<strong>Git Bash Here</strong>”，输入以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>看到出现以下信息：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">INFO Hexo is running at http:&#x2F;&#x2F;0.0.0.0:4000&#x2F;. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure>
<p>此时博客的服务就已启用并运行，在浏览器中输入本地博客地址 “<a href="http://0.0.0.0:4000/”" target="_blank" rel="noopener">http://0.0.0.0:4000/”</a> 就可以看到博客了。如下图：</p>
<p><img src="https://s2.ax1x.com/2020/03/01/3cMlzd.jpg" alt="3cMlzd.jpg"></p>
<h2 id="博客部署"><a href="#博客部署" class="headerlink" title="博客部署"></a>博客部署</h2><p>上一步我们的博客实际上已经搭建成功了，只不过这个博客只能在本地访问，要放到网上让别的人都可以访问，我们就需要继续将博客部署到Github和Coding上。</p>
<h3 id="配置SSH密钥"><a href="#配置SSH密钥" class="headerlink" title="配置SSH密钥"></a>配置SSH密钥</h3><p>SSH是一种安全协议，配置SSH密钥后才可以通过git操作实现本地代码与Github/Coding仓库代码的同步。<br>在第一次建立的文件夹下（我的路径为D:\hexoblog\）右键选择“Git Bash Here”，输入以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;email@example.com&quot;</span><br></pre></td></tr></table></figure>
<p>以上邮箱地址填写个人邮箱<br>回车后会出现：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Generating public&#x2F;private rsa key pair. </span><br><span class="line">Enter file in which to save the key (&#x2F;c&#x2F;Users&#x2F;...&#x2F;.ssh&#x2F;id_rsa):</span><br></pre></td></tr></table></figure>
<p>这里是问密钥存放到哪个文件夹下，这里我们就存在默认目录就可以，所以直接回车。<br>之后会出现：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Enter passphrase (empty for no passphrase):</span><br></pre></td></tr></table></figure>
<p>这里是输入密码，我直接回车了，之后会要求再输一遍密码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Enter same passphrase again:</span><br></pre></td></tr></table></figure>
<p>之前没设置密码，所以这里也直接回车了。<br>接下来屏幕上会显示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Your identification has been saved in &#x2F;c&#x2F;Users&#x2F;...&#x2F;.ssh&#x2F;id_rsa.  </span><br><span class="line">Your public key has been saved in &#x2F;c&#x2F;Users&#x2F;...&#x2F;.ssh&#x2F;id_rsa.pub.  </span><br><span class="line">The key fingerprint is: .....</span><br><span class="line">......</span><br><span class="line">...... </span><br><span class="line">The key&#39;s randomart image is: .....</span><br><span class="line">......</span><br><span class="line">......</span><br></pre></td></tr></table></figure>
<p>中间点代替的都是各种看不懂的字符串，也就是你生成的SSH密钥。</p>
<blockquote>
<p>密钥分公钥和私钥，我们后面将配置的是公钥<br>此时继续输入以下命令，将公钥复制到粘贴板：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">clip &lt; ~&#x2F;.ssh&#x2F;id_rsa.pub</span><br></pre></td></tr></table></figure>
<p>此时SSH密钥就配置好了，接下来，我们要通过SSH密钥将本地Hexo与Github建立联系。</p>
<h3 id="将Hexo部署到Github"><a href="#将Hexo部署到Github" class="headerlink" title="将Hexo部署到Github"></a>将Hexo部署到Github</h3><h4 id="注册帐号"><a href="#注册帐号" class="headerlink" title="注册帐号"></a>注册帐号</h4><p>点击<a href="https://github.com/" target="_blank" rel="noopener">Github官网</a>，输入用户名、邮箱和密码点“sign up”注册帐号。</p>
<h4 id="建立仓库"><a href="#建立仓库" class="headerlink" title="建立仓库"></a>建立仓库</h4><p>注册登陆后，在右上角找到“+”号，点“New repository”，开始创建仓库：</p>
<p><img src="https://s2.ax1x.com/2020/03/01/3c3mXd.jpg" alt="3c3mXd.jpg"></p>
<h4 id="添加公钥到Github"><a href="#添加公钥到Github" class="headerlink" title="添加公钥到Github"></a>添加公钥到Github</h4><p><img src="https://s2.ax1x.com/2020/03/01/3gplZR.jpg" alt="3gplZR.jpg"><br>加好公钥后，在你的Hexo文件夹（第一层文件夹，我的是D:\hexoblog\）下右键选择“Git Bash Here”，输入以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>
<p>之后系统会显示几行信息，其中最后一行是：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Are you sure you want to continue connecting(yes&#x2F;no)?</span><br></pre></td></tr></table></figure>
<p>此时输入“yes”回车后会显示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">...You&#39;ve successfully authenticated,but Github does not provide shell access.</span><br></pre></td></tr></table></figure>
<p>接着输入以下命令，继续配置Git个人信息：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;your_name&quot;  </span><br><span class="line">git config --global user.email  &quot;your_mailbox&quot;</span><br></pre></td></tr></table></figure>
<p>将””中的your_name、your_mailbox替换成自己的用户名和邮箱，建议与Github一致。</p>
<h4 id="同步到Github仓库"><a href="#同步到Github仓库" class="headerlink" title="同步到Github仓库"></a>同步到Github仓库</h4><p>按以下步骤先将仓库SSH地址加入到博客的配置文件：</p>
<p><img src="https://s2.ax1x.com/2020/03/01/3gklee.jpg" alt="3gklee.jpg"><br>打开你的Hexo博客文件夹，即第二层文件夹（我的地址是D:\hexoblog\hexo\），里面是这些文件：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.depoly_git</span><br><span class="line">node_modules</span><br><span class="line">public</span><br><span class="line">scaffolds</span><br><span class="line">source</span><br><span class="line">themes</span><br><span class="line">.gitignore</span><br><span class="line">_config.yml</span><br><span class="line">db.json</span><br><span class="line">package.json</span><br><span class="line">package-lock.json</span><br></pre></td></tr></table></figure>
<p>用记事本打开“_config.yml”文件，定位到<strong>deploy</strong>，按格式输入以下内容（这里以我输入的为例子）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:khgjgpf&#x2F;khgjgpf.github.io.git  </span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<p><strong>注意</strong>：<br><strong>1.“repository:”后面粘贴刚才在Github仓库复制的SSH地址</strong>。<br><strong>2.“branch:”后填master，如果你没有建立别的分支的话</strong>。<br><strong>3.“type:”、“repository:”、“branch:”冒号后都有一个空格，这个空格不能少</strong>，其它配置项也同理。<br>修改完成后，在本文件夹（我的地址是D:\hexoblog\hexo\）下右键选择“Git Bash Here”，输入以下命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure>
<p>系统会返回要求你输入Github的帐号和密码，按要求输入后，本地的Hexo博客就同步到Github了。<br>此时，在浏览器输入”yourname.github.io”这个地址就可以看到博客了。</p>
<h3 id="将Hexo部署到Coding"><a href="#将Hexo部署到Coding" class="headerlink" title="将Hexo部署到Coding"></a>将Hexo部署到Coding</h3>]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/02/08/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
